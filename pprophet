#!/usr/bin/perl

use strict;
use warnings;

use Getopt::Long;

#xinteract -OPFtu -N- -dREV_ -D../../uniprot_human_shuffled.fasta K562_Ctrl_thermo-denat_TMT.pep.xml

my $decoy_tag = 'REV_';
my $force     = 0;
my $out;
my $db;
my $keep_meta;
my $expect_only;
my $no_mass;

GetOptions(
    'decoy_tag=s' => \$decoy_tag,
    'out=s'       => \$out,
    'db=s'        => \$db,
    'force'       => \$force,
    'keep_meta'   => \$keep_meta,
    'expect_only' => \$expect_only,
    'no_mass'     => \$no_mass,
);

my @files = @ARGV;
die "missing input file name(s)\n" if (scalar(@files) < 1);
for (@files) {
    die "bad input file: $_\n" if (! -r $_);
 }

if (! defined $out) {
    if (scalar(@files) == 1) {
        $out = $ARGV[0];
        $out =~ s/\.pep\.xml$/\.pp\.pep\.xml/;
        die "failed to guess output name\n"
            if ($ARGV[0] eq $out);
    }
    else {
        die "must specify output file for multiple inputs\n";
    }
}

my $pp_flags = '-OAPtud';
$pp_flags .= 'F' if ($force);
$pp_flags .= 'E' if ($expect_only);
$pp_flags .= 'k' if ($no_mass);
my $res = system("xinteract -p0 $pp_flags -N$out -d$decoy_tag -D$db @files");
die "Error running PeptideProphet\n" if ($res);
if (! $keep_meta) {
    my $base = $out;
    $base =~ s/\.xml$//;
    unlink $_ for (glob "$base*.png");
    unlink "$base\.xml\.index";
    unlink "$base-MODELS.html";
}

exit;


